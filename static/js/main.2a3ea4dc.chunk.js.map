{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Contact.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","data","name","occupation","description","city","address","networks","social","map","network","href","url","className","id","title","typing","Footer","About","bio","image","street","state","zip","phone","email","resumedownload","Resume","skillmessage","education","school","degree","graduated","work","company","years","skills","toLowerCase","style","width","level","Contact","useState","setName","setEmail","subject","setSubject","message","setMessage","contactName","contactEmail","contactMessage","contactmessage","submitForm","window","open","encodeURIComponent","onSubmit","htmlFor","type","defaultValue","value","size","onChange","e","target","cols","rows","onClick","Portfolio","projects","projectImage","alt","src","category","App","resumeData","setResumeData","useEffect","fetch","then","res","json","main","resume","portfolio","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a3ea4dc.chunk.js","sourcesContent":["import React from \"react\";\nimport TypeWriter from \"react-typewriter\";\n\nconst Header = ({ data }) => {\n\tif (data) {\n\t\tvar name = data.name;\n\t\tvar occupation = data.occupation;\n\t\tvar description = data.description;\n\t\tvar city = data.address.city;\n\t\tvar networks = data.social.map(function(network) {\n\t\t\treturn (\n\t\t\t\t<li key={network.name}>\n\t\t\t\t\t<a href={network.url}>\n\t\t\t\t\t\t<i className={network.className}></i>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<header id=\"home\">\n\t\t\t<nav id=\"nav-wrap\">\n\t\t\t\t<a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\n\t\t\t\t\tShow navigation\n\t\t\t\t</a>\n\t\t\t\t<a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\n\t\t\t\t\tHide navigation\n\t\t\t\t</a>\n\n\t\t\t\t<ul id=\"nav\" className=\"nav\">\n\t\t\t\t\t<li className=\"current\">\n\t\t\t\t\t\t<a className=\"smoothscroll\" href=\"#home\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"smoothscroll\" href=\"#about\">\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"smoothscroll\" href=\"#resume\">\n\t\t\t\t\t\t\tResume\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"smoothscroll\" href=\"#portfolio\">\n\t\t\t\t\t\t\tWorks\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a className=\"smoothscroll\" href=\"#contact\">\n\t\t\t\t\t\t\tContact\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\n\t\t\t<div className=\"row banner\">\n\t\t\t\t<div className=\"banner-text\">\n\t\t\t\t\t<h1 className=\"responsive-headline\">\n\t\t\t\t\t\t<TypeWriter typing={0.5}>{name ? `I'm ${name}.` : null}</TypeWriter>\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tBased in {city}. <span>{occupation}</span>. {description}.\n\t\t\t\t\t</h3>\n\t\t\t\t\t<hr />\n\t\t\t\t\t<ul className=\"social\">{networks}</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<p className=\"scrolldown\">\n\t\t\t\t<a className=\"smoothscroll\" href=\"#about\">\n\t\t\t\t\t<i className=\"icon-down-circle\"></i>\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = ({ data }) => {\n\tif (data) {\n\t\tvar networks = data.social.map(function(network) {\n\t\t\treturn (\n\t\t\t\t<li key={network.name}>\n\t\t\t\t\t<a href={network.url}>\n\t\t\t\t\t\t<i className={network.className}></i>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t}\n\n\treturn (\n\t\t<footer>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"twelve columns\">\n\t\t\t\t\t<ul className=\"social-links\">{networks}</ul>\n\n\t\t\t\t\t{/* <ul className=\"copyright\"></ul> */}\n\t\t\t\t</div>\n\t\t\t\t<div id=\"go-top\">\n\t\t\t\t\t<a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\">\n\t\t\t\t\t\t<i className=\"icon-up-open\"></i>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst About = ({ data }) => {\n\tif (data) {\n\t\tvar name = data.name;\n\t\tvar profilepic = \"images/\" + data.image;\n\t\tvar bio = data.bio;\n\t\tvar street = data.address.street;\n\t\tvar city = data.address.city;\n\t\tvar state = data.address.state;\n\t\tvar zip = data.address.zip;\n\t\tvar phone = data.phone;\n\t\tvar email = data.email;\n\t\tvar resumeDownload = data.resumedownload;\n\t}\n\n\treturn (\n\t\t<section id=\"about\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"three columns\">\n\t\t\t\t\t{/* <img\n\t\t\t\t\t\tclassName=\"profile-pic\"\n\t\t\t\t\t\tsrc={profilepic}\n\t\t\t\t\t\talt=\"Sonny's Profile Pic\"\n\t\t\t\t\t/> */}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"nine columns main-col\">\n\t\t\t\t\t<h2>About Me</h2>\n\n\t\t\t\t\t<p>{bio}</p>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"columns contact-details\">\n\t\t\t\t\t\t\t<h2>Contact Details</h2>\n\t\t\t\t\t\t\t<p className=\"address\">\n\t\t\t\t\t\t\t\t<span>{name}</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t{street}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{city} {state}, {zip}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>{phone}</span>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<span>{email}</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"columns download\">\n              <p>\n                <a href={resumeDownload} className=\"button\">\n                  <i className=\"fa fa-download\"></i>Download Resume\n                </a>\n              </p>\n            </div> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Resume = ({ data }) => {\n  if (data) {\n    var skillmessage = data.skillmessage;\n    var education = data.education.map(function (education) {\n      return (\n        <div key={education.school}>\n          <h3>{education.school}</h3>\n          <p className=\"info\">\n            {education.degree} <span>&bull;</span>\n            <em className=\"date\">{education.graduated}</em>\n          </p>\n          <p>{education.description}</p>\n        </div>\n      );\n    });\n    var work = data.work.map(function (work) {\n      return (\n        <div key={work.company}>\n          <h3>{work.company}</h3>\n          <p className=\"info\">\n            {work.title}\n            <span>&bull;</span> <em className=\"date\">{work.years}</em>\n          </p>\n          <p>{work.description}</p>\n        </div>\n      );\n    });\n    var skills = data.skills.map(function (skills) {\n      var className = \"bar-expand \" + skills.name.toLowerCase();\n      return (\n        <li key={skills.name}>\n          <span style={{ width: skills.level }} className={className}></span>\n          <em>{skills.name}</em>\n        </li>\n      );\n    });\n  }\n\n  return (\n    <section id=\"resume\">\n      <div className=\"row education\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Education</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <div className=\"row item\">\n            <div className=\"twelve columns\">{education}</div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row work\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Work</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">{work}</div>\n      </div>\n\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n          <h1>\n            <span>Skills</span>\n          </h1>\n        </div>\n\n        <div className=\"nine columns main-col\">\n          <p>{skillmessage}</p>\n\n          <div className=\"bars\">\n            <ul className=\"skills\">{skills}</ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Resume;\n","import React, { useState } from \"react\";\n\nconst Contact = ({ data }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  if (data) {\n    var contactName = data.name;\n    var street = data.address.street;\n    var city = data.address.city;\n    var state = data.address.state;\n    var zip = data.address.zip;\n    var phone = data.phone;\n    var contactEmail = data.email;\n    var contactMessage = data.contactmessage;\n  }\n\n  const submitForm = () => {\n    window.open(\n      `mailto:${contactEmail}?subject=${encodeURIComponent(\n        subject\n      )}&body=${encodeURIComponent(name)} (${encodeURIComponent(\n        email\n      )}): ${encodeURIComponent(message)}`\n    );\n  };\n\n  return (\n    <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"two columns header-col\">\n          <h1>\n            <span>Get In Touch.</span>\n          </h1>\n        </div>\n\n        <div className=\"ten columns\">\n          <p className=\"lead\">{contactMessage}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"eight columns\">\n          <form onSubmit={submitForm}>\n            <fieldset>\n              <div>\n                <label htmlFor=\"contactName\">\n                  Name <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={name}\n                  size=\"35\"\n                  id=\"contactName\"\n                  name=\"contactName\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactEmail\">\n                  Email <span className=\"required\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={email}\n                  size=\"35\"\n                  id=\"contactEmail\"\n                  name=\"contactEmail\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactSubject\">Subject</label>\n                <input\n                  type=\"text\"\n                  defaultValue=\"\"\n                  value={subject}\n                  size=\"35\"\n                  id=\"contactSubject\"\n                  name=\"contactSubject\"\n                  onChange={(e) => setSubject(e.target.value)}\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"contactMessage\">\n                  Message <span className=\"required\">*</span>\n                </label>\n                <textarea\n                  cols=\"50\"\n                  rows=\"15\"\n                  value={message}\n                  onChange={(e) => setMessage(e.target.value)}\n                  id=\"contactMessage\"\n                  name=\"contactMessage\"\n                ></textarea>\n              </div>\n\n              <div>\n                <button onClick={submitForm} type=\"submit\" className=\"submit\">\n                  Submit\n                </button>\n              </div>\n            </fieldset>\n          </form>\n\n          <div id=\"message-warning\"> Error boy</div>\n          <div id=\"message-success\">\n            <i className=\"fa fa-check\"></i>Your message was sent, thank you!\n            <br />\n          </div>\n        </div>\n\n        <aside className=\"four columns footer-widgets\">\n          <div className=\"widget widget_contact\">\n            <h4>Address and Phone</h4>\n            <p className=\"address\">\n              {contactName}\n              <br />\n              {contactEmail}\n              <br />\n              <br />\n              {street} <br />\n              {city}, {state} {zip}\n              <br />\n              <span>{phone}</span>\n            </p>\n          </div>\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\n\nconst Portfolio = ({ data }) => {\n  if (data) {\n    var projects = data.projects.map(function (projects) {\n      var projectImage = \"images/portfolio/\" + projects.image;\n      return (\n        <div key={projects.title} className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n              <img alt={projects.title} src={projectImage} />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                  <h5>{projects.title}</h5>\n                  <p>{projects.category}</p>\n                </div>\n              </div>\n              <div className=\"link-icon\">\n                <i className=\"fa fa-link\"></i>\n              </div>\n            </a>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <section id=\"portfolio\">\n      <div className=\"row\">\n        <div className=\"twelve columns collapsed\">\n          <h1>Check Out Some of My Works.</h1>\n\n          <div\n            id=\"portfolio-wrapper\"\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\n          >\n            {projects}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;\n","import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Components/About\";\nimport Resume from \"./Components/Resume\";\nimport Contact from \"./Components/Contact\";\nimport Portfolio from \"./Components/Portfolio\";\n\nimport \"./App.css\";\n\nconst App = () => {\n\tconst [resumeData, setResumeData] = useState({});\n\n\tuseEffect(() => {\n\t\tfetch(\"/resumeData.json\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetResumeData(data);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header data={resumeData.main} />\n\t\t\t<About data={resumeData.main} />\n\t\t\t<Resume data={resumeData.resume} />\n\t\t\t<Portfolio data={resumeData.portfolio} />\n\t\t\t<Contact data={resumeData.main} />\n\t\t\t<Footer data={resumeData.main} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}